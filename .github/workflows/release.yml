name: Build and Release Binaries

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        arch: [x86_64, aarch64]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set Rust Target
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
              echo "x86_64-apple-darwin" > target.txt
            else
              echo "aarch64-apple-darwin" > target.txt
            fi
          else
            if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
              echo "x86_64-unknown-linux-gnu" > target.txt
            else
              echo "aarch64-unknown-linux-gnu" > target.txt
            fi
          fi
          cat target.txt

      - name: Build Release Binary
        run: |
          TARGET=$(cat target.txt)
          rustup target add $TARGET
          cargo build --release --target $TARGET

      - name: Prepare Artifact
        run: |
          TARGET=$(cat target.txt)
          mkdir dist
          cp target/$TARGET/release/ask-man dist/ask-man
          OS_NAME="${{ matrix.os }}"
          OS_NAME="${OS_NAME/-latest/}"
          TAR_NAME="ask-man-${OS_NAME}-${{ matrix.arch }}.tar.gz"
          tar -czvf $TAR_NAME -C dist ask-man

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ask-man-*.tar.gz
